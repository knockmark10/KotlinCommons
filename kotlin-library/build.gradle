apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "2.1.7"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:mediarouter-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:support-v13:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //Google related
    api 'com.google.android.gms:play-services-maps:16.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    //Utils module
    api 'com.github.knockmark10:TrackingManager:1.0.1'
    api 'com.github.knockmark10:PermissionLibrary:1.0.1'
    //Others
    api 'com.squareup.okhttp3:okhttp-urlconnection:3.3.1'
    api 'id.zelory:compressor:2.1.0'
    api "com.google.zxing:core:3.3.0"
    api "com.journeyapps:zxing-android-embedded:3.2.0@aar"
    api "com.github.simbiose:Encryption:2.0.1"
    api 'com.github.bumptech.glide:glide:4.8.0'
    api "com.nostra13.universalimageloader:universal-image-loader:1.9.5"
}
repositories {
    mavenCentral()
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    excludes = ['**/*.kt']
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
